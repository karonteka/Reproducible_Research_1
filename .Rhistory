setwd("~/Documents/DataScience/ReproResearch/Assignment")
f<- file.path(getwd(), "actvity.csv")
dataFile=read.csv(f)
f<- file.path(getwd(), "activity.csv")
dataFile=read.csv(f)
head(dataFile)
summary(dataFile)
f<- file.path(getwd(), "activity.csv")
dataFile=read.csv(f, na.strings="NA", stringsAsFactors=FALSE)
summary(dataFile)
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=FALSE)
mean(f$steps, na.rm=TRUE)
hist(f$steps, na.rm=TRUE)
table(f$steps, na.rm=TRUE)
table(f$steps)
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=FALSE)
summary(dataFile)
summary(f)
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=TRUE)
summary(f)
hist(f$steps, na.rm=TRUE)
table(f$steps, na.rm=TRUE)
table(f$steps)
summary(f)
table(f$date)
sum(f$steps %by% f$date, na.rm=TRUE)
sum(f$steps %in% f$date, na.rm=TRUE)
total <- tapply(f$steps, f$date, sum)
total
View(f)
total <- tapply(f$steps, f$date, sum, na.rm=TRUE)
total
hist(total)
summary(total)
str(total)
total_mean <- tapply(f$steps, f$date, mean, na.rm=TRUE)
total_median <- tapply(f$steps, f$date, median, na.rm=TRUE)
total_mean
total_median
dim(total)
hist(total, breaks=61)
summary(total)
summarize(total)
summarise(total)
dim(total)
hist(total)
aggregate(steps, date, data=f, FUN=sum)
f
names(f)
aggregate(steps~date, data=f, FUN=sum)
total <- tapply(f$steps, f$date, sum, na.rm=TRUE)
aggregate(steps~date, data=f, FUN=sum)
total
hist(total)
total <- aggregate(steps~date, data=f, FUN=sum)
hist(total)
str(total)
hist(total$steps)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, breaks=8)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, breaks=7)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, breaks=7)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, breaks=6)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, breaks=3)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, breaks=7)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1, alpha=0.5)
tapply(f$steps, f$date, mean, na.rm=TRUE)
aggregate(steps~date, data=f, FUN=mean)
tapply(f$steps, f$date, median, na.rm=TRUE)
aggregate(steps~date, data=f, FUN=median)
mean(f$steps)
mean(f$steps, na.rm=TRUE)
mean(total, na.rm=TRUE)
mean(total$steps, na.rm=TRUE)
median(total$steps, na.rm=TRUE)
stepstaken <- aggregate(steps~date, data=f, FUN=average)
stepstaken <- aggregate(steps~date, data=f, FUN=mean)
stepstaken
stepstaken <- aggregate(steps~interval, data=f, FUN=mean)
stepstaken
names(stepstaken)
plot(stepstaken$interval, stepstaken$steps, main='Average of steps along October and November 2012', xlab='Interval', ylab='Average Steps', type='l, col="blue")
''
)
)
plot(stepstaken$interval, stepstaken$steps, main='Average of steps along October and November 2012', xlab='Interval', ylab='Average Steps', type='l', col="blue")
plot(stepstaken$interval, stepstaken$steps, main='Average of steps along October and November 2012', xlab='Interval', ylab='Average Steps', type='l', col="blue")
plot(stepstaken$interval, stepstaken$steps, main='Average of steps along October and November 2012', xlab='Interval', ylab='Average Steps', type='l', col="blue", xlim=c(0,2500))
, xlim=c(0,2500)
max(stepstaken)
stepstaken
max(stepstaken$interval)
max(stepstaken$steps)
stepstaken[max(stepstaken$steps)]
stepstaken$interval[max(stepstaken$steps)]
summary(stepstaken)
which(max(stepstaken$steps))
which.max(stepstaken$steps)
stepstaken$interval[which.max(stepstaken$steps)]
summary(f)
sum(is.na(f$steps))
sum(is.na(f$date))
sum(is.na(f$interval))
head(f)
head(stepstaken)
for (i in 1:nrow(f)){
if (f$steps[i]=='NA') {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[steps$interval==a]
}
}
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[steps$interval==a]
}
}
#The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
print a
#f$steps[i] <- stepstaken$steps[steps$interval==a]
}
}
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
print(a)
#f$steps[i] <- stepstaken$steps[steps$interval==a]
}
}
stepstaken$steps[steps$interval==a]
stepstaken$steps[stepstaken$interval==a]
tail(stepstaken)
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[stepstaken$interval==a]
}
}
f
tail(stepstaken)
summary(f)
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=FALSE)
summary(f)
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[stepstaken$interval==a]
}
}
summary(f)
total <- aggregate(steps~date, data=f, FUN=sum)
hist(total$steps, main="Histogram of the total number of steps taken each day", xlab="Steps", col="red", las=1)
mean(total$steps, na.rm=TRUE)
median(total$steps, na.rm=TRUE)
weekdays(f$date)
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=TRUE)
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[stepstaken$interval==a]
}
}
weekdays(f$date)
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=FALSE)
weekdays(f$date)
weekdays(as.date(f$date))
weekdays(as.Date(f$date))
f$day <- weekdays(as.Date(f$date))
head(f)
tail(f)
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=TRUE)
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[stepstaken$interval==a]
}
}
f$day <- weekdays(as.Date(f$date))
tail(f)
day <- weekdays(as.Date(f$date))
day
isWeekday(day, wday = 1:5)
str(day)
install.package{ timeDate }
install.package{"timeDate"}
library(timeDate)
install.packages("timeDate")
isWeekday(day, wday = 1:5)
library(timeDate)
isWeekday(day, wday = 1:5)
isWeekday(POSIX(day), wday = 1:5)
str(day)
day <- strptime(f$date)
day <- strptime(f$date, "%y-$m-%d")
day
F$date
f$date
day <- weekdays(as.POSIXct(f$date))
day
str(day)
day <- as.POSIXct(f$date)
day
isWeekday(day, wday = 1:5)
isWeekday(day, wday = 1:5)
day <- as.POSIXct(f$date)
f$day <- isWeekday(day, wday = 1:5)
f$end <- isWeekend(day, wday = 1:5)
#Make a panel plot containing a time s
head(f)
isWeekday(day, wday = 1:5)
f
f$day <- if(isWeekday(day, wday = 1:5)==TRUE){"Weekday" else "Weekend"}
f$day <- if(isWeekday(day, wday = 1:5)==TRUE){"Weekday" else ("Weekend")}
f$day <- if(isWeekday(day, wday = 1:5)==TRUE){"Weekday"}
day <- as.POSIXct(f$date)
as.logical(c("Weekday","Weekend","None"))
f$day[isWeekday(day, wday = 1:5)=="TRUE"] <- "Weekday"
f
dataFile<- file.path(getwd(), "activity.csv")
f=read.csv(dataFile, na.strings="NA", stringsAsFactors=TRUE)
for (i in 1:nrow(f)){
if (is.na(f$steps[i])) {
a <- f$interval[i]
f$steps[i] <- stepstaken$steps[stepstaken$interval==a]
}
}
f
head(f)
day <- as.POSIXct(f$date)
day
f$day[isWeekday(day, wday = 1:5)=="TRUE"] <- "Weekday"
f
f$day[isWeekend(day, wday = 1:5)=="TRUE"] <- "Weekend"
f
head(f, n=100)
head(f, n=1000)
head(f, n=1000:3000)
head(f, n=3000)
head(f, n=1500)
head(f, n=3000)
names(f)
as.Factor(f$day[isWeekday(day, wday = 1:5)=="TRUE"]) <- "Weekday"
as.factor(f$day[isWeekday(day, wday = 1:5)=="TRUE"]) <- "Weekday"
factor(f$day[isWeekday(day, wday = 1:5)=="TRUE"]) <- "Weekday"
as.factor(f$day)
f$day <- as.factor(f$day)
stepstaken2 <- aggregate(steps~interval, data=f, FUN=mean)
stepstaken2
stepstaken2 <- aggregate(steps~interval + day, data=f, FUN=mean)
stepstaken2
stepstaken2 <- aggregate(steps~interval + day, data=f, FUN=mean)
qplot(interval, steps, data=f, facets=.~day))
qplot(interval, steps, data=f, facets=.~day)
library(ggplot2)
qplot(interval, steps, data=f, facets=.~day)
qplot(interval, steps, data=f, facets=.~day, type="l")
qplot(interval, steps, data=stepstaken2, facets=.~day)
qplot(interval, steps, data=f, facets=.~day, type='l')
qplot(interval, steps, data=f, facets=.~day, type='1')
qplot(interval, steps, data=f, facets=.~day, type='l')
final <- ggplot(stepstaken2, aes(interval, steps) + facet_grid(.~day) + geom_line()
final
plot(final)
final <- ggplot(stepstaken2, aes(interval, steps))
final + facet_grid(.~day) + geom_line()
final + facet_grid(.~day) + geom_line() + ggtitle("Average of steps along October and November 2012") + labs(x="Interval", y="Average Steps")
final + facet_grid(day~.) + geom_line() + ggtitle("Average of steps along October and November 2012") + labs(x="Interval", y="Average Steps")
final <- ggplot(stepstaken2, aes(interval, log10(steps)))
final + facet_grid(day~.) + geom_line() + ggtitle("Average of steps along October and November 2012") + labs(x="Interval", y="Average Steps")
final <- ggplot(stepstaken2, aes(interval, steps))
final + facet_grid(day~.) + geom_line() + ggtitle("Average of steps along October and November 2012") + labs(x="Interval", y="Average Steps")
stepstaken <- aggregate(steps~interval, data=f, FUN=mean)
plot(stepstaken$interval, stepstaken$steps, main='Average of steps along October and November 2012', xlab='Interval', ylab='Average Steps', type='l', col="blue", xlim=c(0,2500))
textxy(stepstaken$interval[which.max(stepstaken$steps)])
stepstaken2 <- aggregate(steps~interval + day, data=f, FUN=mean)
qplot(interval, steps, data=stepstaken2, facets=.~day)
final <- ggplot(stepstaken2, aes(interval, steps))
final + facet_grid(day~.) + geom_line() + ggtitle("Average of steps along October and November 2012") + labs(x="Interval", y="Average Steps")
stepstaken2
stepstaken2 <- aggregate(steps~interval + day + date, data=f, FUN=mean)
qplot(interval, steps, data=stepstaken2, facets=.~day)
final <- ggplot(stepstaken2, aes(interval, steps))
final + facet_grid(day~.) + geom_line()
stepstaken2 <- aggregate(steps~interval + day, data=f, FUN=mean)
qplot(interval, steps, data=stepstaken2, facets=.~day)
final <- ggplot(stepstaken2, aes(interval, steps))
final + facet_grid(day~.) + geom_line() + ggtitle("Average of steps along October and November 2012") + labs(x="Interval", y="Average Steps")
knit2html(PA1_template.Rmd)
library(knitr)
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
render("PA1_template.Rmd")
library(rmarkdown)
render("PA1_template.Rmd")
knit("PA1_template.Rmd")
